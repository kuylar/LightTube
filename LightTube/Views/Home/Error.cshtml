@using LightTube.Localization
@using Microsoft.AspNetCore.Diagnostics
@{
	Layout = null;
	IExceptionHandlerPathFeature error = Context.Features.Get<IExceptionHandlerPathFeature>()!;
	Exception exception = 
		error.Error.InnerException ?? 
		error.Error ?? 
		new Exception("Nothing went wrong..?");
	LocalizationManager localization = LocalizationManager.GetFromHttpContext(Context);

	bool innertubeError = exception.StackTrace?.Contains("InnerTube") ?? false;
	bool errorReportable = true;
	string message = "Something went wrong...";
	string path = error.Path + Context.Request.QueryString;

	if (exception.GetType().Namespace == "InnerTube.Exceptions")
	{
		errorReportable = false;
		message = error.Error.Message;
	}
}

<!DOCTYPE html>
<html lang="en" class="@Model.GetThemeClass()">
<head>
	<meta charset="UTF-8">
	<title>Error - LightTube</title>
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<link rel="stylesheet" href="~/css/lighttube.css?v=@Utils.GetVersion()">
	<link rel="stylesheet" href="~/css/renderers.css?v=@Utils.GetVersion()">
	<link rel="stylesheet" href="~/fonts/roboto/roboto.css">
	@if (Configuration.CustomCssPath != null)
	{
		<link rel="stylesheet" href="/css/custom.css">
	}
</head>
<body class="error-container">
<h1 class="title">@localization.GetString("error.title")</h1>
<h2 class="title">@message</h2>

@if (errorReportable) {
	@if (innertubeError) {
		<p>@localization.GetString("error.body.innertube")</p>
	} else {
		<p>@localization.GetString("error.body.lighttube")</p>
	}

	<ul>
		<li><b class="title">@localization.GetString("error.body.details.instance")</b> (@Context.Request.Host)</li>
		<li><b class="title">@localization.GetString("error.body.details.version")</b> (@Utils.GetVersion() / @Utils.GetInnerTubeVersion())</li>
		<li><b class="title">@localization.GetString("error.body.details.path")</b> (@path)</li>
		<li><b class="title">@localization.GetString("error.body.details.locale")</b> (@Context.GetLanguage()_@Context.GetRegion())</li>
		<li><b class="title">@localization.GetString("error.body.details.stacktrace")</b></li>
	</ul>
	<code style="text-align:start">
		@Html.Raw(string.Join("<br>",
			exception.ToString()
				.Split('\n')
				.Where(x => !x.Contains("Microsoft.AspNetCore."))))
	</code>
}

<p>
	@localization.GetString("error.alternatives")
	<b>
		<a href="https://piped.video@(path)">Piped</a>
	</b>,
	<b>
		<a href="https://invidio.us@(path)">Invidious</a>
	</b>,
	<b>
		<a href="https://youtube.com@(path)">YouTube</a>
	</b>
</p>
</body>
</html>