@using InnerTube
@using InnerTube.Renderers
@using Utils = LightTube.Utils
@model ChannelContext

@{
	Model.Title = Model.ChannelTitle;
}

<div class="channel-container">
	@if (Model.BannerUrl != null)
	{
		<div class="channel-banner">
			<img loading="lazy" class="channel-banner__img" src="@Model.BannerUrl" alt="Channel Banner">
		</div>
	}
	<div class="channel-info">
		<div class="channel-info__container">
			<img loading="lazy" class="channel-info__avatar" src="@Model.AvatarUrl" alt="@Model.ChannelTitle">
			<div class="channel-info__info">
				<span class="channel-info__name ml-1 title">@Model.ChannelTitle</span>
				<!-- TODO follow format @@handle • @Model.SubscriberCountText • @@Model.VideoCountText  -->
				<span class="channel-info__subs">@Model.SubscriberCountText</span>
				@if (!Model.LightTubeAccount)
				{
					<partial name="SubscribeButton" model="Model.Id"/>
				}
				else if (Model.Editable)
				{
					<a class="btn-subscribed" href="/settings/account">
						<span class="text">Account Settings</span>
					</a>
				}
		</div>
		</div>
	</div>
	<div class="channel-tabs">
		<div class="channel-tabs__container">
			@foreach (ChannelTabs tab in Model.Tabs.Where(x => x != ChannelTabs.Search))
			{
				<partial name="ChannelTabItem" model="@(tab, Model.Id)"/>
			}
		</div>
	</div>
	@switch (Model.CurrentTab)
	{
		case ChannelTabs.Videos or ChannelTabs.Live or ChannelTabs.Community:
		{
			<div class="channel-content search-container">
				@foreach (IRenderer renderer in Model.Content.Where(x => x is not ContinuationItemRenderer))
				{
					<partial name="Renderer" model="@renderer"/>
				}
			</div>
			break;
		}
		case ChannelTabs.Shorts:
		{
			<div class="channel-content reel-grid">
				@foreach (IRenderer renderer in Model.Content.Where(x => x is not ContinuationItemRenderer))
				{
					<partial name="Renderer" model="@renderer"/>
				}
			</div>
			break;
		}
		default:
		{
			<div class="channel-content">
				@foreach (IRenderer renderer in Model.Content.Where(x => x is not ContinuationItemRenderer))
				{
					<partial name="Renderer" model="@renderer"/>
				}
			</div>
			break;
		}
	}
</div>
@if (Model.Continuation is not null)
{
	<div class="next-page">
		<span></span>
		<span>•</span>
		<a href="@Utils.GetContinuationUrl(Context.Request.Path.ToString(), Model.Continuation)">Next Page</a>
	</div>
}